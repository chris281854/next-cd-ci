name: Continuous Deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:
  pull_request:
    types:
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-version-pr-or-release:
    runs-on: ubuntu-latest # Corregí "lastest" a "latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setting up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Check for Formatting Errors
        id: format-check
        run: npm run format

      - name: Format notifications
        if: steps.format-check.outcome == 'failure'
        uses: ./.github/workflows/format-notification.yml

      - name: Fix Formatting Errors
        if: steps.format-check.outcome == 'failure'
        run: npm run format:fix

      - name: Check for ESLint Errors
        run: npm run lint

      - name: Check for Type Errors
        run: npm run typecheck

      - name: Build Project
        run: npm run build

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: .next/

      - name: Run Unit Tests
        run: npm run test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage
          path: coverage/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright Browsers
        id: cache-playwright
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwrite-browsers-${{env. PLAYWRIGHT_VERSION}}

      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Run E2E Tests
        run: npm run test:e2e
        env:
          FLAGSMITH_KEY: ${{ secrets.FLAGSMITH_KEY }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

      - name: Create version PR or Release
        id: changests
        uses: changesets/action@v1.2.3
        run: npm install --global changesets
        with:
          publish: npx changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}
      - run: echo "${{ toJson(steps.changests.outputs.version) }}"
      - name: Send a Slack message for Version PR updates
        if: steps.changests.outputs.pullRequestNumber

        uses: slackapi/slack-github-action@v1.24.0

        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ *<https://github.com/${{github.repository}}/pull/${{ steps.changesets.outputs.pullRequestNumber }}|Version Pull Request>* was updated. Review it and merge it to create a new release and deployment."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
